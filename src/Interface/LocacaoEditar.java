/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Dados.Cliente;
import Dados.Imovel;
import Dados.Locacao;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author pedrowarmlingbotelho
 */
public class LocacaoEditar extends PadraoEditar {

    ArrayList<Locacao> listaLocacao;
    ArrayList<Imovel> listaImoveis;
    ArrayList<Cliente> listaCliente;
    javax.swing.JDesktopPane Desktop;

    /**
     * Creates new form LocacaoRenovar
     */
    public LocacaoEditar(ArrayList<Locacao> listaLocacao, ArrayList<Cliente> listaCliente, ArrayList<Imovel> listaImoveis, javax.swing.JDesktopPane Desktop) {
        initComponents();
        this.listaLocacao = listaLocacao;
        this.listaImoveis = listaImoveis;
        this.listaCliente = listaCliente;
        this.Desktop = Desktop;
        bSalvar.setEnabled(false);
    }

    public void limparTela() {
        tId.setText("");
        tCliente.setText("");
        tImovel.setText("");
        tValor.setText("");
        tDataInicio.setText("");
        tDataFim.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelC = new javax.swing.JPanel();
        lCliente = new javax.swing.JLabel();
        tCliente = new javax.swing.JTextField();
        lImovel = new javax.swing.JLabel();
        tImovel = new javax.swing.JTextField();
        lDataInicio = new javax.swing.JLabel();
        tDataInicio = new javax.swing.JFormattedTextField();
        lDataFim = new javax.swing.JLabel();
        tDataFim = new javax.swing.JFormattedTextField();
        bConsultarCliente = new javax.swing.JButton();
        bConsultarImovel = new javax.swing.JButton();
        lId = new javax.swing.JLabel();
        tId = new javax.swing.JTextField();
        bConsultar = new javax.swing.JButton();
        bConfirmar = new javax.swing.JButton();
        lValor = new javax.swing.JLabel();
        tValor = new javax.swing.JTextField();

        lCliente.setText("Nome do Cliente:");

        lImovel.setText("Endereço do Imóvel:");

        lDataInicio.setText("Data de Inicio:");

        try {
            tDataInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lDataFim.setText("Data de Fim:");

        try {
            tDataFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        bConsultarCliente.setText("Consultar");
        bConsultarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarClienteActionPerformed(evt);
            }
        });

        bConsultarImovel.setText("Consultar");
        bConsultarImovel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarImovelActionPerformed(evt);
            }
        });

        lId.setText("Id Locação:");

        bConsultar.setText("Consultar");
        bConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConsultarActionPerformed(evt);
            }
        });

        bConfirmar.setText("Confirmar");
        bConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bConfirmarActionPerformed(evt);
            }
        });

        lValor.setText("Valor:");

        javax.swing.GroupLayout painelCLayout = new javax.swing.GroupLayout(painelC);
        painelC.setLayout(painelCLayout);
        painelCLayout.setHorizontalGroup(
            painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCLayout.createSequentialGroup()
                        .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lImovel)
                            .addComponent(lCliente)
                            .addComponent(lValor)
                            .addComponent(lDataFim)
                            .addComponent(lDataInicio))
                        .addGap(18, 18, 18)
                        .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCLayout.createSequentialGroup()
                                .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tCliente)
                                    .addComponent(tImovel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bConsultarCliente)
                                    .addComponent(bConsultarImovel)))
                            .addComponent(tValor, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCLayout.createSequentialGroup()
                        .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCLayout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addComponent(tId, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelCLayout.createSequentialGroup()
                                .addComponent(lId)
                                .addGap(176, 176, 176)))
                        .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bConfirmar)
                            .addComponent(bConsultar))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        painelCLayout.setVerticalGroup(
            painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lId)
                        .addComponent(tId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelCLayout.createSequentialGroup()
                        .addComponent(bConsultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bConfirmar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lCliente)
                    .addComponent(tCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bConsultarCliente))
                .addGap(18, 18, 18)
                .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lImovel)
                    .addComponent(tImovel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bConsultarImovel))
                .addGap(18, 18, 18)
                .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lValor))
                .addGap(23, 23, 23)
                .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lDataInicio)
                    .addComponent(tDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lDataFim)
                    .addComponent(tDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        getContentPane().add(painelC, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bConsultarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarClienteActionPerformed
        ClienteMostrar telaMostrarCliente = new ClienteMostrar(listaCliente);
        telaMostrarCliente.setVisible(true);
        this.Desktop.add(telaMostrarCliente, 0);
    }//GEN-LAST:event_bConsultarClienteActionPerformed

    private void bConsultarImovelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarImovelActionPerformed
        ImoveisMostrar telaMostrarImoveis = new ImoveisMostrar(listaImoveis);
        telaMostrarImoveis.setVisible(true);
        this.Desktop.add(telaMostrarImoveis, 0);
    }//GEN-LAST:event_bConsultarImovelActionPerformed

    private void bConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConsultarActionPerformed
        Relatorio telaMostrarLocacao = new Relatorio(listaLocacao);
        telaMostrarLocacao.setVisible(true);
        this.Desktop.add(telaMostrarLocacao, 0);
    }//GEN-LAST:event_bConsultarActionPerformed

    private void bConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bConfirmarActionPerformed
       
        // try catch se o usuario não informou um número no campo ID
        
        try {
            if (tId.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Código não informado", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
                limparTela();
                bSalvar.setEnabled(false);
                return;
            } else {
                for (Locacao locacao : listaLocacao) {
                    if (locacao.getId() == Integer.parseInt(tId.getText())) {
                        tCliente.setText(locacao.getIdCliente());
                        tImovel.setText(locacao.getIdImovel());
                        tValor.setText(locacao.getValor());
                        tDataInicio.setText(locacao.getDataInicio());
                        tDataFim.setText(locacao.getDataFim());
                        bSalvar.setEnabled(true);
                        tId.setEditable(false);
                        break;
                    }
                }
            }

            if (!bSalvar.isEnabled()) {
                JOptionPane.showMessageDialog(this, "Locação não cadastrada", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
                limparTela();
                bSalvar.setEnabled(false);
            }
        } catch (NumberFormatException ee) {
            JOptionPane.showMessageDialog(this, "Informe um número no campo 'Identificação'", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
            limparTela();
            bSalvar.setEnabled(false);
        }
    }//GEN-LAST:event_bConfirmarActionPerformed

    @Override
    public void bSalvarActionPerformed(ActionEvent ae) {
        for (Locacao locacao : listaLocacao) {
            if (locacao.getId() == Integer.parseInt(tId.getText())) {
                locacao.setId(Integer.parseInt(tId.getText()));
                locacao.setIdCliente(tCliente.getText());
                locacao.setIdImovel(tImovel.getText());
                locacao.setValor(tValor.getText());
                locacao.setDataInicio(tDataInicio.getText());
                locacao.setDataFim(tDataFim.getText());
                limparTela();
                bSalvar.setEnabled(true);
                tId.setEditable(true);
                JOptionPane.showMessageDialog(null, "As modificações foram salvas!");
                break;
            }
        }

        if (!bSalvar.isEnabled()) {
            JOptionPane.showMessageDialog(this, "Locação não cadastrada", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
            limparTela();
            bSalvar.setEnabled(false);
        }
        
        bSalvar.setEnabled(false);
    }

    @Override
    public void bLimparActionPerformed(ActionEvent ae) {
        limparTela();
    }

    @Override
    public void bCancelarActionPerformed(ActionEvent ae) {
        this.dispose();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bConfirmar;
    private javax.swing.JButton bConsultar;
    private javax.swing.JButton bConsultarCliente;
    private javax.swing.JButton bConsultarImovel;
    private javax.swing.JLabel lCliente;
    private javax.swing.JLabel lDataFim;
    private javax.swing.JLabel lDataInicio;
    private javax.swing.JLabel lId;
    private javax.swing.JLabel lImovel;
    private javax.swing.JLabel lValor;
    private javax.swing.JPanel painelC;
    private javax.swing.JTextField tCliente;
    private javax.swing.JFormattedTextField tDataFim;
    private javax.swing.JFormattedTextField tDataInicio;
    private javax.swing.JTextField tId;
    private javax.swing.JTextField tImovel;
    private javax.swing.JTextField tValor;
    // End of variables declaration//GEN-END:variables
}
